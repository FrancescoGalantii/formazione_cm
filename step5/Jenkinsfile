pipeline {
    agent any
    environment {
        REGISTRY = 'registry'
        IMAGE_NAME = 'mystep5'
        TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir ('step5') {
                    script {
                        //def imageTag = "${REGISTRY}/${IMAGE_NAME}:${TAG}"
                        try {
                            docker.build("${REGISTRY}/${IMAGE_NAME}:${TAG}")
                        } catch (Exception e) {
                            error "Docker build failed: ${e.message}"
                        }
                            
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('step5') {
                    script {
                        def tag = "build-${env.BUILD_NUMBER}"
                        def imageName = "${REGISTRY}/${IMAGE_NAME}:${tag}"
                        def image = docker.image(imageName) 

                        docker.withRegistry('http://localhost:5000',) {
                            image.push() 
                        }
                    }
                }
            }
        }
        }
        
    }
    post {
        always {
            cleanWs()
        }
    }
}
