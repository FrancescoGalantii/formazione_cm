pipeline {
    agent any
    environment {
        REGISTRY_CREDENTIALS = 'registry-credentials'
        REGISTRY = 'registry'
        IMAGE_NAME = 'mystep5'
        TAG = 'latest'
        PROGRESSIVE_TAG = '' 
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir ('step5') {
                    script {
                        def imageTag = "${REGISTRY}/${IMAGE_NAME}:${TAG}"
                        docker.build(imageTag, '.')
                    }
                }
            }
        }

        stage('Tagging Image') {
            steps {
                script {
                    def tag = "build-${env.BUILD_NUMBER}"
                    //sh "docker tag ${REGISTRY}/${IMAGE_NAME}:${tag}"
                }
            }
        }
        
        stage('Docker Push') {
            steps {
                script {
                    def image = "${IMAGE_NAME}:${tag}"
                    try {
                        image.push()
                    } catch (Exception e) {
                        error "Docker push failed: ${e.message}"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
