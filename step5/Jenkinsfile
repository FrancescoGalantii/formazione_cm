pipeline {
    agent any
    environment {
        REGISTRY_CREDENTIALS = 'registry-credentials'
        REGISTRY = 'registry'
        IMAGE_NAME = 'mystep5'
        TAG = 'latest'
        progressiveTag = ''
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir ('step5') {
                    script {
                        def imageTag = "${REGISTRY}/${IMAGE_NAME}:${TAG}"
                        docker.build(imageTag, '.')
                    }
                }
            }
        }

        stage('Tagging Image') {
            steps {
                script {
                    def currentDate = new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("UTC"))
                    def progressiveTag = "${REGISTRY}/${IMAGE_NAME}:${currentDate}"
                    //IMAGE_TAG = "${env.IMAGE_NAME}:${currentDate}"
                    sh "docker tag ${IMAGE_NAME}:${TAG}/${IMAGE_NAME}:${env.progressiveTag}"
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    if (env.REGISTRY_CREDENTIALS) {
                        docker.withRegistry('https://index.docker.io/v1/', "${REGISTRY_CREDENTIALS}") {
                            def image = docker.image("${IMAGE_NAME}/${env.progressiveTag}")
                            try {
                                image.push()
                            } catch (Exception e) {
                                error "Docker push failed: ${e.message}"
                            }
                        }
                    } 
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
