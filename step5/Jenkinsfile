pipeline {
    agent any

    environment {
        REGISTRY_URL = "localhost:5000" // Sostituisci con l'URL del tuo Docker registry
        IMAGE_NAME = "ubuntu-ssh-server"   // Nome immagine coerente con il Dockerfile fornito
    }

    stages {
        stage('Build') {
            steps {
                script {
                    echo "Building Docker image..."
                    def dockerTag = new Date().format("yyyyMMddHHmmss")
                    env.DOCKER_TAG = dockerTag
                    sh "docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${DOCKER_TAG} ."
                    echo "Image built with tag: ${DOCKER_TAG}"
                }
            }
        }

        stage('Push') {
            steps {
                script {
                    echo "Pushing Docker image to registry..."
                    sh "echo ${env.REGISTRY_PASSWORD} | docker login -u ${env.REGISTRY_USER} --password-stdin ${REGISTRY_URL}"
                    sh "docker push ${REGISTRY_URL}/${IMAGE_NAME}:${DOCKER_TAG}"
                    echo "Image pushed to registry with tag: ${DOCKER_TAG}"
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline completed. Cleaning up..."
            sh "docker system prune -f"
        }
    }
}


